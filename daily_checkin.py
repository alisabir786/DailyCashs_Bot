from telegram import Update
from telegram.ext import ContextTypes
import config
from data_manager import save_users  # тЬЕ ржпрзБржХрзНржд ржХрж░рзЗржЫрж┐

async def show_daily_checkin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    user_data = config.USERS.setdefault(user_id, {
        "coins": 0,
        "daily_day": 0
    })

    # Ensure daily_day is within valid range
    day = user_data.get("daily_day", 0)

    if day >= 7:
        await query.edit_message_text("тЬЕ ржЖржкржирж┐ ржПржЗ рж╕ржкрзНрждрж╛рж╣рзЗ рж╕ржм ржЪрзЗржХ-ржЗржи рж╕ржорзНржкржирзНржи ржХрж░рзЗржЫрзЗржи!\n\nржЖржЧрж╛ржорзА рж╕ржкрзНрждрж╛рж╣рзЗ ржЖржмрж╛рж░ ржЪрзЗржХ-ржЗржи рж╢рзБрж░рзБ рж╣ржмрзЗред")
        return

    # Get reward from config
    reward = config.DAILY_REWARD[day]

    # тЬЕ Update user's coin and day
    user_data["coins"] += reward
    user_data["daily_day"] = day + 1

    save_users(config.USERS)  # тЬЕ ржПржЦрж╛ржирзЗржЗ рж╕рзЗржн ржХрж░рзЗ ржлрзЗрж▓рж▓рж╛ржо

    # Prepare check-in status list
    checkmarks = ["тЬЕ" if i < user_data["daily_day"] else "ЁЯФУ" for i in range(7)]

    # Prepare message
    text = (
        "ЁЯУЕ <b>ржбрзЗржЗрж▓рж┐ ржЪрзЗржХ-ржЗржи:</b>\n\n"
        f"рззржо ржжрж┐ржи - 4 ЁЯкЩ {checkmarks[0]}\n"
        f"рзиржпрж╝ ржжрж┐ржи - 8 ЁЯкЩ {checkmarks[1]}\n"
        f"рзйржпрж╝ ржжрж┐ржи - 16 ЁЯкЩ {checkmarks[2]}\n"
        f"рзкрж░рзНрже ржжрж┐ржи - 32 ЁЯкЩ {checkmarks[3]}\n"
        f"рзлржо ржжрж┐ржи - 72 ЁЯкЩ {checkmarks[4]}\n"
        f"рзмрж╖рзНржа ржжрж┐ржи - 90 ЁЯкЩ {checkmarks[5]}\n"
        f"рзнржо ржжрж┐ржи - 120 ЁЯкЩ {checkmarks[6]}\n\n"
        f"ЁЯОЙ ржЖржЬ ржЖржкржирж┐ ржкрзЗрзЯрзЗржЫрзЗржи <b>{reward}</b> ржХрзЯрзЗржи!"
    )

    await query.edit_message_text(text=text, parse_mode="HTML")
    
