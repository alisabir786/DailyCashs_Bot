from aiogram import types
from data_manager import add_user, get_user, update_balance
from aiogram.dispatcher import FSMContext
from config import dp

@dp.message_handler(commands=['refer'])
async def referral_info(message: types.Message):
    user_id = message.from_user.id
    refer_link = f"https://t.me/{dp.bot.username}?start={user_id}"
    await message.answer(
        f"ЁЯФЧ ржЖржкржирж╛рж░ рж░рзЗржлрж╛рж░ рж▓рж┐ржВржХ:\n{refer_link}\n\n"
        "ЁЯОБ ржкрзНрж░рждрж┐ рж╕ржлрж▓ рж░рзЗржлрж╛рж░рзЗ ржЖржкржирж┐ ржкрж╛ржмрзЗржи:\n"
        "тЮд 10 ржХрзЯрзЗржи ржЗржирж╕рзНржЯрзНржпрж╛ржирзНржЯ\n"
        "тЮд 10% рж▓рж╛ржЗржлржЯрж╛ржЗржо ржЯрж┐ржо ржЗржиржХрж╛ржо!"
    )

@dp.message_handler(commands=["start"])
async def handle_start(message: types.Message):
    user_id = message.from_user.id
    name = message.from_user.full_name
    username = message.from_user.username

    args = message.get_args()
    ref_by = int(args) if args.isdigit() and int(args) != user_id else None

    user = get_user(user_id)
    if not user:
        add_user(user_id, name, username, ref_by=ref_by)
        if ref_by:
            update_balance(ref_by, 10)
            await message.bot.send_message(ref_by, f"ЁЯОЙ ржЖржкржирж┐ ржПржХржЬржи рж░рзЗржлрж╛рж░ ржХрж░рзЗржЫрзЗржи ржПржмржВ 10 ржХрзЯрзЗржи ржкрзЗрзЯрзЗржЫрзЗржи!")
        await message.answer("тЬЕ ржЖржкржирж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ ржпрзБржХрзНржд рж╣рзЯрзЗржЫрзЗржи!")
    else:
        await message.answer("ЁЯСЛ ржЖржкржирж┐ ржЖржЧрзЗржЗ ржпрзБржХрзНржд рж╣рзЯрзЗржЫрзЗржиред")
