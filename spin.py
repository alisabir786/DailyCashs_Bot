# spin.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import random
import config

async def show_spin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id

    # Task/Ad simulation
    await query.edit_message_text(
        text="ЁЯзй рж╕рзНржкрж┐ржи ржХрж░рж╛рж░ ржЖржЧрзЗ ржПржХржЯрж┐ ржЯрж╛рж╕рзНржХ ржХржоржкрзНрж▓рж┐ржЯ ржХрж░рзБржи (ржпрзЗржоржи: ржЕрзНржпрж╛ржб ржжрзЗржЦрзБржи)... тЬЕ",
    )

    # Show spin button
    await context.bot.send_message(
        chat_id=user_id,
        text="ЁЯОп рж╕рзНржкрж┐ржи ржХрж░рзБржи ржПржмржВ 0-100 ржХрзЯрзЗржи ржЬрж┐рждрзБржи!",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("ЁЯОб Spin Now", callback_data="do_spin")]
        ])
    )

async def do_spin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id

    # рж╕рзНржкрж┐ржи рж░рж┐ржУрзЯрж╛рж░рзНржб рж░тАНрзНржпрж╛ржирзНржбржо ржмрж╛ржЫрж╛ржЗ
    reward = random.choice(config.SPIN_REWARDS)
    config.USERS[user_id]["coins"] += reward

    await query.edit_message_text(
        text=f"ЁЯОЙ ржЖржкржирж┐ рж╕рзНржкрж┐ржи ржХрж░рзЗ {reward} ЁЯкЩ ржХрзЯрзЗржи ржкрзЗрзЯрзЗржЫрзЗржи!\n\nЁЯТ░ Wallet: {config.USERS[user_id]['coins']} ЁЯкЩ",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("ЁЯФБ ржЖржмрж╛рж░ рж╕рзНржкрж┐ржи ржХрж░рзБржи", callback_data="spin")],
            [InlineKeyboardButton("ЁЯПа ржорзЗржЗржи ржорзЗржирзБ", callback_data="open_menu")]
        ])
    )
def add_referral_bonus(user_id, coin_amount):
    for uid, data in config.USERS.items():
        if user_id in data["referrals"]:
            bonus = int(coin_amount * config.REFER_PERCENT)
            data["coins"] += bonus
add_referral_bonus(user_id, coin_amount)
